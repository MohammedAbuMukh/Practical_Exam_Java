package com.axsos.log_reg.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Size;
import org.springframework.format.annotation.DateTimeFormat;

import java.util.Date;
import java.util.List;

@Entity
@Table(name = "Peoples")
public class People {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotEmpty(message = "Peoplename is required!")
    @Size(min = 3, max = 30, message = "Peoplename must be between 3 and 30 characters")
    private String peopleName;

    @NotEmpty(message = "Email is required!")
    @Email(message = "Please enter a valid email!")
    private String email;

    @NotEmpty(message = "Password is required")
    @Size(min=8, max=128, message="Password must be between 8 and 128 characters")
    private String password;

    @Transient
    @NotEmpty(message="Confirm Password is required!")
    private String confirm;

    @Column(updatable = false)
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date createdAt;

    @DateTimeFormat(pattern = "yyy-MM-dd")
    private Date updatedAt;

    @PrePersist
    protected void onCreate() {
        this.createdAt = new Date();
    }

    @PreUpdate
    protected void onUpdate() {
        this.updatedAt = new Date();
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "team_id")
    private Team team;

    @OneToMany(mappedBy = "creator", fetch = FetchType.LAZY)
    private List<Team> createdTeams;

    // getters and setters

    public People() { }

    public People(String email, String password, String peopleName, String confirm) {
        this.email = email;
        this.password = password;
        this.peopleName = peopleName;
        this.confirm = confirm;
    }

    // Add getters and setters for team and createdTeams fields

    public Team getTeam() {
        return team;
    }

    public void setTeam(Team team) {
        this.team = team;
    }

    public List<Team> getCreatedTeams() {
        return createdTeams;
    }

    public void setCreatedTeams(List<Team> createdTeams) {
        this.createdTeams = createdTeams;
    }
}
